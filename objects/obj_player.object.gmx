<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_run_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    

event_inherited();
spd = WALK_SPD;
rollspd = 5;
ladderspd = 1;
hspd = 0;
vspd = 0;
len = 0;
dir = 0;

walking = false;
running = false;
attacked = false;
rolled = false;
ladder = false;
aiming = false;
caninteract = true;
specialactive = false;
hurtable = true;
alive = true;

image_speed = 0;
state = scr_walk_state;
face = DOWN;


//variables for switching attack states
combo = 0;
combomax = 3;
canattack = true;

combostate[0] = scr_attack_state;
combostate[1] = scr_attack_state_2;
combostate[2] = scr_attack_state_3;

//artifact state arrays
artifactstate[0] = scr_barrier_cast_state;
artifactstate[1] = scr_speed_cast_state;
artifactstate[2] = scr_storm_cast_state;

//wand event system
wandacquired = false;
attackacquired = false;
casteracquired = false;
coilacquired = false;
quillacquired = false;
palmacquired = false;

//artifact event system
noartifactacquired = true;
organeneacquired = false;
sigilacquired = false;
jewelacquired = false;

//panto npc event system
caretaker_talked = false;
bebu_acquired = false;
tentabergcreated = false;


//onis npc event system
onimacreated = false;
organenecreated = false;
coilcreated = false;

//dryke npc event system
evocatorcreated = false;
sigilcreated = false;
quillcreated = false;

//stelforn npc event system
zelcreated = false;
jewelcreated = false;
palmcreated = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deactivat speed artifact ability
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move the player in the step event

script_execute(state);

//attach wand to player
if (!instance_exists(obj_player_wand)) {
    instance_create(x, y, obj_player_wand);
}

//replenish magic
if (specialactive == false and obj_player_stats.magic &lt; 10) {
    obj_player_stats.magic += .05;
    obj_player_stats.magicprc += .5
}

//cycle artifact
if (obj_input.cycle_artifact_key and obj_player.organeneacquired == true and obj_player.sigilacquired == false and obj_player.jewelacquired == false) {
      if (obj_player_stats.artifact_num &gt;= 0) {
        obj_player_stats.artifact_num = 0;
        audio_play_sound(snd_artifact_switch, 3, false);
    } else {
        audio_play_sound(snd_artifact_switch, 3, false);
        obj_player_stats.artifact_num = obj_player_stats.artifact_num+1;
    }
}

if (obj_input.cycle_artifact_key and obj_player.organeneacquired == true and obj_player.sigilacquired == true and obj_player.jewelacquired == false) {
      if (obj_player_stats.artifact_num &gt;= 1) {
        audio_play_sound(snd_artifact_switch, 3, false);
        obj_player_stats.artifact_num = 0;
    } else {
        audio_play_sound(snd_artifact_switch, 3, false);
        obj_player_stats.artifact_num = obj_player_stats.artifact_num+1;
    }
}

if (obj_input.cycle_artifact_key and obj_player.organeneacquired == true and obj_player.sigilacquired == true and obj_player.jewelacquired == true) {
      if (obj_player_stats.artifact_num &gt;= 2) {
        audio_play_sound(snd_artifact_switch, 3, false);
        obj_player_stats.artifact_num = 0;
    } else {
        audio_play_sound(snd_artifact_switch, 3, false);
        obj_player_stats.artifact_num = obj_player_stats.artifact_num+1;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_increase_max_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// collect expr
with (other) {
    instance_destroy();
}

with (obj_player_stats) {
        maxhp +=1;
        hp = maxhp;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// collect health
audio_play_sound(snd_new_item, 1, false);
with (other) {
    instance_destroy();
}

with (obj_player_stats) {
    hp = min(hp+1, maxhp);
    hpprc = min(hpprc+25, maxhpprc);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_warp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go through the door
audio_play_sound(snd_pico_exit, 3, false);
if (room_exists(other.new_room)) {
    room_goto(other.new_room);
    x = other.new_x;
    y = other.new_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set fixed rotation
phy_fixed_rotation = true;
persistent = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the shadow

if (state == scr_walk_state || state == scr_run_state || state == scr_attack_state || state == scr_attack_state_2 || state ==scr_attack_state_3 || state == scr_roll_state || state == scr_roll_attack_state || state == scr_aim_state || state == scr_interact_state || state == scr_hurt_state || state == scr_death_state || state == scr_barrier_cast_state || state == scr_barrier_state || state == scr_speed_cast_state || state == scr_speed_state || state == scr_storm_cast_state || state == scr_storm_state)
{
    draw_sprite(spr_player_shadow, image_index, x, y);
    draw_self();
} else {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,16</point>
    <point>22,16</point>
    <point>22,28</point>
    <point>10,28</point>
  </PhysicsShapePoints>
</object>
